name: Build and Push TPU Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  workflow_dispatch:

env:
  GAR_LOCATION: europe-west1
  GAR_REPOSITORY: ai-r-d
  IMAGE_NAME: vllm-tpu

permissions:
  contents: read
  id-token: write

concurrency:
  group: tpu-docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build and push docker/Dockerfile.tpu to Google Artifact Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GOOGLE_SERVICE_ACCOUNT }}

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=stable,enable=${{ github.ref_name == 'main' }}
            type=raw,value=bleeding,enable=${{ github.ref_name == 'develop' }}
            type=sha,enable=true

      - name: Compute NIGHTLY_DATE (UTC)
        id: date
        run: echo "nightly_date=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.tpu
          push: true
          platforms: linux/amd64
          build-args: |
            NIGHTLY_DATE=${{ steps.date.outputs.nightly_date }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
